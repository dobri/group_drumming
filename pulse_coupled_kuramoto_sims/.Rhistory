print(g[1])
length(unique(df$pair))
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
colors
g[[p]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.01, width=.2) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
print(g[1])
ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.001, width=.2) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.2) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
p
c=1
c+2(p-1)
c+2*(p-1)
c+2*(2-1)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) && (data$condition==c),]
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[c+2*(p-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
}
}
multiplot(plotlist=g,cols=2)
g
g[1]
g[2]
g[1]
data$condition
c
(data$condition==c)
(data$piece==p)
(data$piece==p) && (data$condition==c)
(data$piece==p) & (data$condition==c)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[c+2*(p-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
}
}
multiplot(plotlist=g,cols=2)
g[4]
p
c
ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=1.2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=1.2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
}
}
g[1]
g[2]
g[3]
g[4]
multiplot(plotlist=g,cols=2)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
}
}
multiplot(plotlist=g,cols=2)
library(lme4)
m00=lmer(gc ~ 1 + (1|pair),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + piece + (1|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial+condition + piece + (1|pair),data=data,REML=0)
m04=lmer(gc ~ 1 + trial*condition + piece + (1|pair),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition*piece + (1|pair),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05)
summary(m02)
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
multiplot(plotlist=g,cols=2)
data$pair_pp1<-c(1,1,1,2,2,3,4,4,4,3,3,2)
data$pair_pp2<-c(2,3,4,3,4,4,3,2,1,3,2,1)
data$pair_pp1
m00=lmer(gc ~ 1 + (1|pair1) + (1|pair2),data=data,REML=0)
m00=lmer(gc ~ 1 + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m03=lmer(gc ~ 1 + trial+condition + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m04=lmer(gc ~ 1 + trial*condition + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition*piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05)
summary(m02)
VarCorr(m02)
ranef(m02)
ranef(m02)$pair_pp1
ranef(m02)$pair_pp2
m02=lmer(gc ~ 1 + trial + (1+trial|pair_pp1) + (1+trial|pair_pp2),data=data,REML=0)
m00=lmer(gc ~ 1 + (1|pair),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial + (1+trial+condition|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial + (1+trial+piece|pair),data=data,REML=0)
m00=lmer(gc ~ 1 + (1|pair),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial + piece + (1+trial|pair),data=data,REML=0)
m04=lmer(gc ~ 1 + trial+condition + piece + (1+trial|pair),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition + piece + (1+trial|pair),data=data,REML=0)
m06=lmer(gc ~ 1 + trial*condition*piece + (1+trial|pair),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05,m06)
summary(m03)
ranef(m03)$pair
ranef(m03)$pair[[1]]
ranef(m03)$pair[[2]]
qqplot(ranef(m03)$pair[[1]])
qqplot(ranef(m03)$pair[1])
qqplot(ranef(m03)$pair[[1]])
ranef(m03)$pair
?m03
? m03
? lmer
summary(m03)
library(lmerTest)
summary(m03)
anova(m03)
summary(m03)
fitted(m03)
data$gc-fitted(m03)
qqplot(data$gc-fitted(m03))
? qqplot
qqplot(data$gc-fitted(m03))
data$gc-fitted(m03)
as.vector(data$gc-fitted(m03))
qqplot(as.vector(data$gc-fitted(m03)))
qqnorm(as.vector(data$gc-fitted(m03)))
qqnorm(data$gc-fitted(m03))
plot(as.vector(data$gc-fitted(m03)))
data$fitted <- fitted(m03)
data$fit_wout_ran <- getME(m03,'X') %*% fixef(m03)
plot(data$fitted)
lines(data$fit_wout_ran,type='p')
lines(data$fit_wout_ran,type='p',col='r')
lines(data$fit_wout_ran,type='p',col='red')
plot(data$fit_wout_ran,type='p',col='black')
lines(data$fit_wout_ran,type='p',col='red')
plot(data$fitted,type='p',col='black')
plot(data$gc,type='p',col='black')
lines(data$fitted,type='p',col='blue')
lines(data$fit_wout_ran,type='p',col='red')
plot(data$pair,data$gc,type='p',col='black')
lines(data$pair,data$fitted,type='p',col='blue')
lines(data$pair,data$fit_wout_ran,type='p',col='red')
plot(data$trial,data$gc,type='p',col='black')
lines(data$trial,data$fitted,type='p',col='blue')
lines(data$trial,data$fit_wout_ran,type='p',col='red')
plot(data$gc,type='p',col='black')
lines(data$fitted,type='p',col='blue')
lines(data$fit_wout_ran,type='p',col='red')
m00=lmer(gc ~ 1 + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair_pp1) + (1+trial|pair_pp2),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m03=lmer(gc ~ 1 + trial+condition + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m04=lmer(gc ~ 1 + trial*condition + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition*piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05)
summary(m02)
m00=lmer(gc ~ 1 + (1|pair),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial + piece + (1+trial|pair),data=data,REML=0)
m04=lmer(gc ~ 1 + trial+condition + piece + (1+trial|pair),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition + piece + (1+trial|pair),data=data,REML=0)
m06=lmer(gc ~ 1 + trial*condition*piece + (1+trial|pair),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05,m06)
summary(m03)
anova(m03)
ranef(m03)$pair[[1]]
ranef(m03)$pair[[2]]
qqnorm(data$gc-fitted(m03))
plot(as.vector(data$gc-fitted(m03)))
plot(data$gc,type='p',col='black')
lines(fitted(m03),type='p',col='blue')
lines(getME(m03,'X') %*% fixef(m03),type='p',col='red')
data<-read.csv(file="http://dotov.synology.me/wordpress/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://github.com/dobri/livelab/blob/master/madawaska_4tet2/movement_analysis/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://github.com/dobri/livelab/madawaska_4tet2/movement_analysis/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://mcmasteru365-my.sharepoint.com/:x:/g/personal/dotovd_mcmaster_ca/EetvhFBUk9JMi9J1aNqd6FoBrtI04MaFR_f8WAQfl4Wrjw?e=xeMNCT",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/blob/master/mada_gc3.csv",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/raw/master/mada_gc3.csv?inline=false",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/raw/master/mada_gc3.csv",header=TRUE)
summary(data)
data<-read.csv(file="https://raw.githubusercontent.com/dobri/livelab/master/README.md?token=AADCLUWT64EXHDE2DQSGPYS7DB3HW",header=TRUE)
data<-read.csv(file="https://raw.githubusercontent.com/dobri/livelab/master/madawaska_4tet2/movement_analysis/mada_gc3.csv?token=AADCLUUE563OFKNZXPUS5SK7DB3RQ",header=TRUE)
summary(data)
data<-read.csv(file="http://dotov.synology.me/wordpress/mada_gc3.csv",header=TRUE)
data$pair<-factor(data$pair)
data$condition<-factor(data$condition)
data$piece<-factor(data$piece)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
#colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
#scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
#print(g)
}
}
library(ggplot2)
library(lme4)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
#colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
#scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
#print(g)
}
}
print(g[1])
install.packages("lmerTest")
library(TSA) #  This provides the pre-whiten function, and one form of simple access to the fitted model series.
library(tseries) #  provides the kpss.test of stationarity
library(forecast)
library(scales)
?prewhiten
install.packages("ghibli")
library(ghibli)
par(mfrow=c(7,3))
for(i in names(ghibli_palettes)) print(ghibli_palette(i))
colors <- ghibli_palette("MarnieMedium2",4,type=("continuous"))
colors
ghibli_palette("MarnieMedium2",4,type=("continuous"))
par
par()
par(mfrow=c(1,1))
ghibli_palette("MarnieMedium2",4,type=("continuous"))
ghibli_palette("MarnieMedium2",40,type=("continuous"))
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"));colors[1:10]
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"));print(colors[1:10])
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))[1:10];colors
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))[1:10]
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))
colors<-ghibli_palette("MarnieMedium2",10,type=("continuous"))
ghibli_palette("MarnieMedium2",10,type=("continuous"))
ghibli_palette("LaputaMedium2",10,type=("continuous"))
ghibli_palette("LaputaMedium",10,type=("continuous"))
ghibli_palette("KikiLight",10,type=("continuous"))
ghibli_palette("KikiLight",40,type=("continuous"))
ghibli_palette("KikiLight",20,type=("continuous"))
ghibli_palette("KikiLight",40,type=("continuous"))
ghibli_palette("KikiDark",40,type=("continuous"))
ghibli_palette("KikiMedium",40,type=("continuous"))
ghibli_palette("PonyoMedium",40,type=("continuous"))
ghibli_palette("PonyoLight",40,type=("continuous"))
ghibli_palette("PonyoLight",30,type=("continuous"))
ghibli_palette("PonyoLight",30,type=("discrete"))
ghibli_palette("PonyoLight",30)
ghibli_palette("PonyoLight")
ghibli_palette("PonyoLight",30,type=("discrete"))
ghibli_palette("PonyoLight",30,type=("continuous"))
ghibli_palette("PonyoLight")
ghibli_palette("PonyoLight",60,type=("continuous"))
ccf
?ccf
library(TSA) #  This provides the pre-whiten function, and one form of simple access to the fitted model series.
?ccf
?acf
?prewhiten
library(igraph)
cite('igraph')
cite(igraph)
cite('igraph')
?igraph
library(wesanderson)
wes_palette("Darjeeling1",3,type=("continuous"))
wes_palette("Darjeeling1",4,type=("continuous"))
wes_palette("Darjeeling1",7,type=("continuous"))
wes_palette("Darjeeling1",70,type=("continuous"))
wes_palette("Darjeeling1")
wes_palette("Darjeeling2",70,type=("continuous"))
wes_palette("Darjeeling3",70,type=("continuous"))
wes_palette("Darjeeling1",70,type=("continuous"))
wes_palette("Darjeeling1",170,type=("continuous"))
wes_palette("Darjeeling1",100,type=("continuous"))
wes_palette("Darjeeling1",20,type=("continuous"))
wes_palette("Darjeeling1",2,type=("continuous"))
library(rstatix)
install.packages("rstatix")
library(rstatix)
?cohens_d
library(ggplot2)
library(wesanderson)
setwd('/home/dobri/logos/mcmc/group_drumming/pulse_coupled_kuramoto_sims')
X <- read.csv('pulse_coupled_kuramoto_20210617-220725.csv',sep=',')
X$Coll = (X$Agg==1)*1
X$Coupled = X$K>0
unique(X$N)*100
unique(X$Coupled)*10
unique(X$Coll)
X$iv <- X$N*100+X$Coupled*10+X$Coll
# xlabels1 = c('N2,Solo,Inds','N2,Ens,Inds',
#              'N4,Solo,Inds','N4,Ens,Inds',
#              'N8,Solo,Inds','N8,Ens,Inds')
#
# xlabels2 = c('Solo,Inds','Solo,Aggr','Ens,Inds','Ens,Aggr',
#              'Solo,Inds','Solo,Aggr','Ens,Inds','Ens,Aggr',
#              'Solo,Inds','Solo,Aggr','Ens,Inds','Ens,Aggr')
#
# colour_palette = wes_palette("Darjeeling1",3,type=("continuous"))
# g<-list('vector',2)
# for (dv in c(1,2)){
#   x$dv<-x[,dv+10]
#   if (dv==1) {
#     dv_label = 'Speeding up'
#     xx<-x[x$Coll==0,]
#     xx$iv <- xx$condngroup
#   }
#   if (dv==2) {
#     dv_label = 'CV'
#     xx<-x
#     xx$iv <- xx$condn
#   }
#   g[[dv]] <- ggplot(xx, aes(x=as.factor(iv), y=dv, color=as.factor(N))) + # , fill=as.factor(N)
#     geom_violin(alpha=.85, size=1, color='black') +
#     #geom_bar(stat = "summary", fun='mean', alpha=1., size=2) +
#     #geom_errorbar(stat = "summary", fun='mean_sdl', alpha=1., size=1, fun.args = list(mult = 1)) +
#     geom_jitter(size=1.2, alpha=.85, width=.3, height = .0) +
#     theme_classic() +
#     theme(legend.position="none",legend.title=element_blank()) +
#     scale_colour_manual(values=colour_palette) +
#     labs(y = dv_label) +
#     labs(x = 'Condition')
#   if (dv==1) {
#     g[[dv]] <- g[[dv]] + scale_x_discrete(labels=xlabels1)
#     #g[[dv]] <- g[[dv]] + scale_y_continuous(breaks = seq(-.25,.3,.1), limits = c(-.25,.3))
#   }
#   if (dv==2) {
#     g[[dv]] <- g[[dv]] + scale_x_discrete(labels=xlabels2)
#     #g[[dv]] <- g[[dv]] + scale_y_continuous(breaks = seq(0,.3,.05), limits = c(0.0,.1))
#   }
# }
# multiplot(plotlist=g,cols=2)
#
# filename=paste("cv_b_limit_bpm_",Sys.Date(),'.png',sep='')
# if (FALSE){
#   png(filename=filename,width=8,height=6,units="in",res=300)
#   multiplot(plotlist=g,cols=1)
#   dev.off()
# }
library(plyr)
xlabels = c('N2,Solo,Inds','N2,Solo,Aggr','N2,Ens,Inds','N2,Ens,Aggr',
'N4,Solo,Inds','N4,Solo,Aggr','N4,Ens,Inds','N4,Ens,Aggr',
'N8,Solo,Inds','N8,Solo,Aggr','N8,Ens,Inds','N8,Ens,Aggr')
means <- ddply(X, 'iv', summarise, mean=mean(cv))
means.sem <- ddply(X, 'iv', summarise, mean=mean(cv), sem=sd(cv)/sqrt(length(cv)))
means.sem <- transform(means.sem, lower=mean-sem, upper=mean+sem)
# means <- ddply(X, 'iv', summarise, mean=mean(ITI))
# means.sem <- ddply(X, 'iv', summarise, mean=mean(ITI), sem=sd(cv)/sqrt(length(ITI)))
# means.sem <- transform(means.sem, lower=mean-sem, upper=mean+sem)
colour_palette = wes_palette("FantasticFox1",3,type=("continuous"))
ggplot(means, aes(x=as.factor(iv), y=mean)) +
geom_bar(stat = "identity", alpha=1., size=.0,color='black',
#color=c(colour_palette[1],colour_palette[1],colour_palette[1],colour_palette[1],colour_palette[2],colour_palette[2],colour_palette[2],colour_palette[2],colour_palette[3],colour_palette[3]),
fill=c(colour_palette[1],colour_palette[1],colour_palette[1],colour_palette[1],colour_palette[2],colour_palette[2],colour_palette[2],colour_palette[2],colour_palette[3],colour_palette[3],colour_palette[3],colour_palette[3])) +
geom_errorbar(data=means.sem,aes(ymax=upper,ymin=lower),stat = "identity", alpha=1., size=1, width=.5) +
labs(y = 'CV') +
labs(x = '') +
scale_x_discrete(labels=xlabels) +
#scale_y_continuous(breaks = seq(0.0,.3,.025), limits = c(0.0,.3)) +
theme_classic() +
theme(legend.position="none",legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 30, vjust = 1., hjust=1, size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(axis.title.y = element_text(size=14))
filename=paste("bars_sim_cv_",Sys.Date(),'.png',sep='')
ggsave(filename,width=8,height=4,dpi=300)
xlabels = c('N2, Solo, Inds','N2, Ensemble, Inds','N2, Ensemble, Group-Aggr',
'N4, Solo, Inds','N4, Ensemble, Inds','N4, Ensemble, Group-Aggr',
'N8, Solo, Inds','N8, Ensemble, Inds','N8, Ensemble, Group-Aggr')
x2<-X[!((X$K==0) & (X$Coll==1)),]
means <- ddply(x2, 'iv', summarise, mean=mean(cv))
means.sem <- ddply(x2, 'iv', summarise, mean=mean(cv), sem=sd(cv)/sqrt(length(cv)))
means.sem <- transform(means.sem, lower=mean-sem, upper=mean+sem)
ggplot(means, aes(x=as.factor(iv), y=mean)) +
geom_bar(stat = "identity", alpha=1., size=.0,color='black',
#color=c(colour_palette[1],colour_palette[1],colour_palette[1],colour_palette[1],colour_palette[2],colour_palette[2],colour_palette[2],colour_palette[2],colour_palette[3],colour_palette[3]),
fill=c(colour_palette[1],colour_palette[1],colour_palette[1],colour_palette[2],colour_palette[2],colour_palette[2],colour_palette[3],colour_palette[3],colour_palette[3])) +
geom_errorbar(data=means.sem,aes(ymax=upper,ymin=lower),stat = "identity", alpha=1., size=1, width=.5) +
labs(y = 'CV') +
labs(x = '') +
scale_x_discrete(labels=xlabels) +
scale_y_continuous(breaks = seq(0.025,.125,.025), limits = c(0.0,.125)) +
theme_classic() +
theme(legend.position="none",legend.title=element_blank()) +
theme(axis.text.x = element_text(angle = 30, vjust = 1., hjust=1, size=14)) +
theme(axis.text.y = element_text(size=14)) +
theme(axis.title.y = element_text(size=14))
filename=paste("bars3_sim_cv_",Sys.Date(),'.png',sep='')
ggsave(filename,width=8,height=6,dpi=300)
